#|-*- mode:lisp -*-|#
(in-package :cl-user)
(defpackage :lake.user
  (:use :cl :lake :cl-syntax)
  (:shadowing-import-from :lake
                          :directory))
(in-package :lake.user)

(use-syntax :interpol)

(task "default" ("hello" "hello.o" "dir" "name:foo"))

(task "hello" ()
  "A task that print hello."
  (echo "do task hello!"))

(task "call-hello" ()
  ;; Call a task from another.
  (execute "hello"))

(defparameter cc "gcc")

(file "hello.o" ("hello.c")
  "A file task that compiles a C source file."
  (sh #?"${cc} -c hello.c"))

(directory "dir" "Create a directory.")

(directory "foo")                       ; superseded by the next task.

(task "foo" ("bar")
  (echo "foo"))

(task "bar" ("foo")
  (echo "bar"))

;; namespace
(namespace "name"

  (task "foo" ("bar")
    "A task in \"name\" namespace."
    (echo "name.foo"))

  (task "bar" ()
    (echo "name.bar"))

  (file "hello.o" ("hello.c")
    (sh "gcc -c hello.c"))

  (task "call-foo" ()
    (execute "foo")))

(task "home" ()
  ;; Use environment variable via roswell.
  (echo (ros:getenv "HOME")))

;; For simultaneous execution.
(task "multi" ("a" "b" "c")
  (echo "multi"))

(task "a" ()
  (sleep 1)
  (echo "a"))

(task "b" ()
  (sleep 1)
  (echo "b"))

(task "c" ()
  (sleep 1)
  (echo "c"))


(task "build" ()
      (sh "rm -f bin/lake")
      (sh "qlot exec ros run -L sbcl -e '(ql:quickload :deploy)' -e '(progn (setf deploy:*status-output* nil) (asdf:make :lake-bin))'"))
