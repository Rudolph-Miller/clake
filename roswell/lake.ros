#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -m lake -Q -- $0 "$@"
|#

(ql:quickload :lake :silent t)
(mapc #'unintern '(print-help print-tasks main))

(defun print-help ()
  (write-line "Usage: lake [options] [target] ...")
  (write-line "Options:")
  (write-line "  -f FILE       Use FILE as a lakefile.")
  (write-line "  -h            Print this message and exit.")
  (write-line "  -T            Display the tasks with descriptions, then exit.")
  (write-line "  -v            Verbose mode."))

(defun print-tasks (pathname)
  (if pathname
      (lake:display-tasks :pathname pathname)
      (lake:display-tasks)))

(defun main (&rest argv)
  (declare (ignorable argv))
  (handler-case
      (let (targets pathname f-mode v-mode)
        (loop for arg in argv
           do (cond
                (f-mode (setf pathname arg)
                        (setf f-mode nil))
                ((string= "-f" arg) (setf f-mode t))
                ((string= "-h" arg) (print-help)
                                    (ros:quit 1))
                ((string= "-T" arg) (print-tasks pathname)
                                    (ros:quit 1))
                ((string= "-v" arg) (setf v-mode t))
                (t (push arg targets))))
        (let ((params `(:verbose ,v-mode
                        ,@(when pathname
                            `(:pathname ,pathname)))))
          (if targets
              (loop for target in targets
                 do (apply #'lake:lake :target target params))
              (apply #'lake:lake params))))
    (error (e)
      (format t "~A~%" e)
      (ros:quit -1))))
